/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

Welcome to Apache Karaf Cave
============================
Apache Karaf Cave is an Apache Karaf subproject. It provides an OSGi Bundle Repository (OBR) and Karaf 
Features Repository (KFR).

OBR provides a service that can automatically install a bundle, with its deployment dependencies, from a bundle
repository.

Apache Karaf Cave provides the following features:
    * Storage: Karaf Cave provides a filesystem storage. The storage backend is designed with a kind of plugin system,
      it means that we can change the default filesystem storage by another kind of storage
    * OBR metadata generation: Karaf Cave automatically creates the OBR metadata for you, using the artifacts presents
      in the Cave repository.
    * OBR registration: Karaf Cave allows you to directly register a Cave repository into the OBR RepositoryAdmin OSGi
      service.
    * Artifact upload: you can update any OSGi bundle in a Cave repository, using advanced URL, e.g.
      mvn:groupId/artifactId/version
    * "External" repository proxy: you can proxy an existing repository (like a Maven one) into a Cave repository. In
      that case, the artifacts are still resident on the proxied repository, Cave handles the OBR metadata. Cave supports
      file: and http: like URL, it means that Cave is able to browse a remote HTTP Maven repository.
    * "External" repository population: you can populate your local Cave repository from an external repository.
      It means that Cave browse the external repository URL (file: or http:), looking for OSGi bundles in the artifacts,
      and copy the bundles in the Cave repository storage.


Getting Started
===============
For an Apache Karaf Cave source distribution, please read
BUILDING for instructions on building Apache Karaf Cave.

To install Apache Karaf Cave, first you have to register the Cave features descriptor:

karaf@root()> feature:repo-add mvn:org.apache.karaf.cave/apache-karaf-cave/3.0.0/xml/features

Now, you can install the Cave feature simply by typing:

karaf@root()> feature:install cave-server

The PDF manual is the right place to find any information about Karaf Cave.

Alternatively, you can also find out how to get started here:
    http://karaf.apache.org/subprojects/cave

If you need more help try talking to us on our mailing lists
    http://karaf.apache.org/site/mailinglists.html

If you find any issues with Apache Karaf, please submit reports
with JIRA here:
    http://issues.apache.org/jira/browse/KARAF

We welcome contributions, and encourage you to get involved in the
Karaf community. If you'd like to learn more about how you can
contribute, please see:
    http://karaf.apache.org/index/community/contributing.html

Many thanks for using Apache Karaf Cave.


The Karaf Team
